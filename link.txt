https://youtu.be/TPRSJbtfK4M vim tutorial amigos.com
https://youtu.be/3fUbBnN_H2c git github amigos.com

iTerm2 is a replacement of terminal
iTerm2 is a free and open-source terminal emulator 
for macOS 
that replaces the default Terminal application



Bash Script with Practical Examples | Full Course

Amigoscode
1.07M subscribers

Subscribed

3.6K


Share

Download

Thanks

123,343 views  22 Apr 2020  #bashscript #shellscripting #zsh
Bash and shell scripting is a skill that you must have in your tool box. In this course I will teach you how use the most essential bash commands. You will also learn the differences between shell terminal and how to use VIM text editor.

I know it's scary but I got your back.

Let's learn

oh and this course is also available for free at Amigoscode https://bit.ly/3axScxz

► Table of contents

00:00:00 - Intro
00:03:12 - Quick Word before we begin
00:04:24 - Windows User?
00:05:01 - Installing Iterm
00:10:31 - ZSH
00:11:46 - Installing ZSH
00:17:48 - Oh My ZSH
00:23:11 - Customize Iterm
00:31:33 - Section Recap 
00:32:52 - Moving around your Terminal
00:37:46 - Intro to Bash Commands
00:41:44 - mkdir and Directories
00:50:26 - mkdir and Directories part 2
00:56:51 - Tree
00:58:28 - Rename with MV
01:01:17 - Working with files
01:06:58 - Less Head & Tail
01:11:03 - cp
01:15:22 - find
01:23:01 - grep
01:31:47 - Bonus: Useful Commands
01:40:54 - VIM Intro
01:42:28 - curl
01:47:05 - Getting started with VIM
01:51:26 - Navigating Around
01:59:54 - Insert Mode
02:08:06 - Delete Cut and Past
02:12:53 - Saving and Quitting 
02:16:45 - Search and Replace
02:22:29 - Creating Files with VIM
02:24:37 - .vimrc
02:29:47 - Lets Wrap Up VIM Section
02:31:19 - Lets Wrap Up This Course

► Curl these files for VIM section
curl -O https://raw.githubusercontent.com/ami...
curl -O https://raw.githubusercontent.com/ami...

► Course Links
https://www.iterm2.com/
https://github.com/ohmyzsh/ohmyzsh/wi...
https://github.com/ohmyzsh/ohmyzsh
https://brew.sh/
Ultimate Vim Configuration | https://github.com/amix/vimrc

► Recommended Books

Clean Code
https://amzn.to/2UGDPlX

HTTP: The Definitive Guide 
https://amzn.to/2JDVi8s

Clean Architecture
https://amzn.to/2xOBNXW

► Computer and Monitor

New Apple MacBook Pro 
https://amzn.to/3464Mmn

===========================
michelkadi@mss-MacBook ~ % echo $SHELL
/bin/zsh
to see which is your shell "zsh or bash "
bash came by default zsh need download also iTerm2
=================================
Last login: Tue Aug 19 09:04:51 on ttys013
**************** install oh my zsh **********
michelkadi@mss-MacBook ~ % sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
Cloning Oh My Zsh...
remote: Enumerating objects: 1444, done.
remote: Counting objects: 100% (1444/1444), done.
remote: Compressing objects: 100% (1377/1377), done.
remote: Total 1444 (delta 42), reused 1242 (delta 39), pack-reused 0 (from 0)
Receiving objects: 100% (1444/1444), 3.29 MiB | 481.00 KiB/s, done.
Resolving deltas: 100% (42/42), done.
From https://github.com/ohmyzsh/ohmyzsh
 * [new branch]      master     -> origin/master
Branch 'master' set up to track remote branch 'master' from 'origin'.
Already on 'master'
/Users/michelkadi

Looking for an existing zsh config...
Using the Oh My Zsh template file and adding it to /Users/michelkadi/.zshrc.

         __                                     __
  ____  / /_     ____ ___  __  __   ____  _____/ /_
 / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \
/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /
\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/
                        /____/                       ....is now installed!


Before you scream Oh My Zsh! look over the `.zshrc` file to select plugins, themes, and options.

• Follow us on X: @ohmyzsh
• Join our Discord community: Discord server
• Get stickers, t-shirts, coffee mugs and more: Planet Argon Shop

➜  ~
➜  ~ cd ~
➜  ~ vi .zshrc
➜  ~
https://youtu.be/TPRSJbtfK4M?t=1467 continue

========== git ==========
Last login: Tue Aug 19 09:34:32 on ttys015
➜  ~ git --version
git version 2.33.0
➜  ~ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
➜  ~
control + l to clear screen
=========== git set up ==================
https://youtu.be/3fUbBnN_H2c?t=920 git set up
https://youtu.be/3fUbBnN_H2c?t=1313 git continue